{"ast":null,"code":"var _jsxFileName = \"/Users/svitlana/Documents/GitHub/goit-react-hw-02-feedback/src/App.jsx\";\nimport React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Statistics from './components/Statistics/Statistics';\nimport s from './App.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleBtnClick = key => {\n      this.setState(prevState => {\n        return {\n          [key]: prevState[key] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + bad + neutral;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      let totalFeedback = this.countTotalFeedback();\n      const {\n        good\n      } = this.state;\n      return totalFeedback ? Math.round(good / totalFeedback * 100) : 0;\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivFeedback = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), Object.keys(this.state).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.button,\n        type: \"button\",\n        onClick: () => this.handleBtnClick(key),\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(Header, {\n        title: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: totalFeedback,\n        positiveFeedbackPercentage: positivFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number\n};\nexport default App;","map":{"version":3,"sources":["/Users/svitlana/Documents/GitHub/goit-react-hw-02-feedback/src/App.jsx"],"names":["React","Component","Header","Statistics","s","PropTypes","App","state","good","neutral","bad","handleBtnClick","key","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","render","positivFeedback","Object","keys","map","button","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,CAAP,MAAc,kBAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAIC,MAAMC,GAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,OAAO,EAAE,CAFF;AAGPC,MAAAA,GAAG,EAAE;AAHE,KADoB;;AAAA,SAO5BC,cAP4B,GAOXC,GAAG,IAAI;AACxB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AAAC,WAACF,GAAD,GAAME,SAAS,CAACF,GAAD,CAAT,GAAe;AAAtB,SAAP;AACE,OAFH;AAGC,KAX2B;;AAAA,SAY5BG,kBAZ4B,GAYP,MAAM;AACzB,YAAM;AAAEP,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGE,GAAP,GAAaD,OAApB;AACD,KAf2B;;AAAA,SAiB5BO,+BAjB4B,GAiBM,MAAM;AACpC,UAAIC,aAAa,GAAG,KAAKF,kBAAL,EAApB;AACA,YAAM;AAAEP,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,aAAOU,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAYX,IAAI,GAAGS,aAAR,GAAyB,GAApC,CAAH,GAA8C,CAAlE;AACD,KArByB;AAAA;;AAwB3BG,EAAAA,MAAM,GAAI;AACT,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMU,aAAa,GAAG,KAAKF,kBAAL,EAAtB;AACA,UAAMM,eAAe,GAAG,KAAKL,+BAAL,EAAxB;AACA,wBACE;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADA,EAECM,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAjB,EAAwBiB,GAAxB,CAA4BZ,GAAG,iBAChC;AAAQ,QAAA,SAAS,EAAER,CAAC,CAACqB,MAArB;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,OAAO,EAAE,MAAM,KAAKd,cAAL,CAAoBC,GAApB,CAHf;AAAA,kBAIGA;AAJH,SACKA,GADL;AAAA;AAAA;AAAA;AAAA,cADC,CAFD,eAaA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cAbA,eAcC,QAAC,UAAD;AACK,QAAA,IAAI,EAAEJ,IADX;AAEK,QAAA,OAAO,EAAEC,OAFd;AAGK,QAAA,GAAG,EAAEC,GAHV;AAIK,QAAA,KAAK,EAAEO,aAJZ;AAKK,QAAA,0BAA0B,EAAGI;AALlC;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA,oBADF;AAwBF;;AApD4B;;AAsD7BlB,UAAU,CAACuB,SAAX,GAAuB;AACtBlB,EAAAA,IAAI,EAAEH,SAAS,CAACsB,MADM;AAEtBlB,EAAAA,OAAO,EAAEJ,SAAS,CAACsB,MAFG;AAGtBjB,EAAAA,GAAG,EAAEL,SAAS,CAACsB;AAHO,CAAvB;AAMD,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Statistics from './components/Statistics/Statistics';\nimport s from './App.module.css';\nimport PropTypes from 'prop-types';\n\n\n\n class App  extends Component {\n  state = {\n   good: 0,\n   neutral: 0,\n   bad: 0\n  }\n \n  handleBtnClick = key => {\n  this.setState(prevState => {\n   return {[key]:prevState[key]+1};\n    });\n  }\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n      let totalFeedback = this.countTotalFeedback();\n      const { good } = this.state;\n      return totalFeedback ? Math.round((good / totalFeedback) * 100) : 0;\n    };\n  \n\n   render () {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivFeedback = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n      <Header title=\"Please leave feedback\"/>\n      {Object.keys(this.state).map(key => (\n      <button className={s.button} \n      key={key} \n      type=\"button\" \n      onClick={() => this.handleBtnClick(key)}>\n        {key}\n      </button>\n      ))}\n\n \n\n      <Header title=\"Statistics\"/>\n       <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positiveFeedbackPercentage= {positivFeedback}\n          /> \n    </>\n    ) \n }\n }\n Statistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n \n };\nexport default App;\n"]},"metadata":{},"sourceType":"module"}